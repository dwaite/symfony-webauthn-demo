# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Security\UserProvider: ~
    App\Security\LogoutSuccessHandler: ~
    App\Security\AuthenticationFailureHandler: ~
    App\Security\AuthenticationSuccessHandler: ~
    App\Validator\Constraints\UniqueUsernameValidator: ~
    App\EventListener\LastLoginAt:
        tags:
            - { name: 'kernel.event_listener', event: 'security.interactive_login' }

    App\Repository\MetadataStatementRepository:
        calls:
            - method: 'addService'
              arguments:
                  - 'fido_alliance_real'
                  - 'https://mds2.fidoalliance.org'
                  - additional_query_strings:
                      - 'token': '%env(FIDO_MDS_TOKEN)%'
            - method: 'addService'
              arguments:
                  - 'conformance_test_1'
                  - 'https://fidoalliance.co.nz/mds/execute/0246d3ec6b1463f5d63b200ffc3c1d1b802f1cde1b10788e02208902127dbbce'
            - method: 'addService'
              arguments:
                  - 'conformance_test_2'
                  - 'https://fidoalliance.co.nz/mds/execute/1323cc994c463752fd60e111defe1fe2187ce344925a5f2282acbbcff6d55a0e'
            - method: 'addService'
              arguments:
                  - 'conformance_test_3'
                  - 'https://fidoalliance.co.nz/mds/execute/309a94da23dc596fe4e4c2e2528bfaecc3cd95bf0ce2a369eb29a72b08dd680c'
            - method: 'addService'
              arguments:
                  - 'conformance_test_4'
                  - 'https://fidoalliance.co.nz/mds/execute/b1d139dbe31d0fc2be43b0584c555f9a3b0548ed397b7dbb123875b4c2335e7b'
            - method: 'addService'
              arguments:
                  - 'conformance_test_5'
                  - 'https://fidoalliance.co.nz/mds/execute/ce2d088e0e35c6196c9e158b09313453f32a44e7e59fb554ac266e33efdd86e5'

    scaleway_client:
        class: Aws\S3\S3Client
        factory: ['@App\Service\ScalewayClientFactory', 'create']
        arguments:
            - "%env(S3_KEY)%"
            - "%env(S3_SECRET)%"


    App\Service\Logger:
        arguments: ['@logger']
        tags:
            - { name: 'monolog.logger', channel: 'webauthn' }
